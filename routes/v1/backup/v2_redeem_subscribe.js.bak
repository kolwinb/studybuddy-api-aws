var bodyParser = require('../../lib/node_modules/body-parser')
var express = require('../../lib/node_modules/express');
//var config = require('../../config.js');

//send mails
var sendmail = require('../../lib/node_modules/sendmail')({silent: true,devPort:25,devHost:'localhost'});

//email validator
var validator = require('../../lib/node_modules/email-validator');

//18byt id generator
var uniqid = require ('../../lib/node_modules/uniqid');

//mysql model
var pool = require('../../models/usermysql.js');

../../library not required
var crypto = require("crypto");

var app = express();
// parse application/json
app.use(bodyParser.json());
var router = express.Router();

router.post('/',function(req,res){
	engparam=req.originalUrl;
//	varstringify=JSON.stringify(req.body);
//	varBody=JSON.parse(varstringify);
	var_mobile=req.body.mobile;
	var_operator=req.body.operator;
	var_redeemCode=req.body.redeem_code;
	var_deviceId=req.body.device_id;
	var_deviceType=req.body.device_type;
	var_status='0';
	var_dateTime= new Date();
	
	//random subscriber id
	var_subscriberId=Math.floor(new Date().valueOf() * Math.random());
	
	console.log("subscriber_id : "+var_subscriberId);

    pool.getConnection(function(err,con){
		if (err) {
			console.log("can't connect database server");
		} else {		
			valrand=uniqid(); //uniq id



    		console.log(req.body.txtemail);
    		//find redeem code
    		con.query("SELECT ? FROM ??  WHERE redeem_code LIKE ? AND is_active=?",["redeem_code","redemption",var_redeemCode,0], function (err,result){
				if (!result.length){
					console.log('requested redeem code not found, this will be commit in log table');
					con.query("INSERT INTO ?? (id,subscriber_id,device_id,mobile,operator,type,status,date_time) VALUES(?,?,?,?,?,?,?,?)",["subscribe_log",'NULL',var_subscriberId,var_deviceId,var_mobile,var_operator,var_deviceType,var_status,var_dateTime],function (err,result) {
						if (err) {
							console.log("can't insert record into subscribe_log table");
						} else {
							console.log("invalid redeem code record added to subscribe_log table");
						}
						});
            		data = {
            			"status":"fail",
            			"error": {
            				"code":"100",
            				"description" : "Invalid Redemption Code",
            				}
              			}
            		res.json(data);
				}else {
				
					//update redeem
    				con.query("UPDATE ?? SET is_active=?,device_id=? WHERE redeem_code LIKE ?",["redemption",1,var_deviceId,var_redeemCode], function (err,result){
   						if (err) {
                   			console.log('subscription update error on redemption table');
                   			data = {
                   				"status":"error",
            					"error": {
            						"code":"101",
               						"description" : "Internal Server Error"
									}
                   			}
                   			res.json(data);
						} else {
							console.log('subscribed successful');

						}
	        		});
	        		//end redeem update
	        		

					//insert subscription
					con.query("INSERT INTO ?? (id,subscriber_id,device_id,mobile,operator,type,status,date_time) VALUES(?,?,?,?,?,?,?,?)",["subscribe",'NULL',var_subscriberId,var_deviceId,var_mobile,var_operator,var_deviceType,var_status,var_dateTime],function (err,result) {
						if (err) {
							console.log(err);
                   			data = {
                   				"status":"error",
            					"error": {
            						"code":"101",
               						"description" : "Internal Server Error"
									}
                   			}
                   			res.json(data);

						} else {
							//****encrypt data ****
							//AES-256 data encryption
							algorithm='aes-256-ctr';
							password='d6F3Efeq';
//							var enc_data = aes_256_encrypt('{"subscriber_id":'+var_subscriberId+',"device_id":'+var_deviceId+'}',password)
							var enc_data = aes_256_encrypt('{"subscriber_id":'+var_subscriberId+',"device_id":'+var_deviceId+'}',password)
							console.log("data aes_256 :"+enc_data);
							//password encryption
							//const enc_passwd = rsaEncrypt(password, 'crypto/rsa_4096_pub.pem');
							//console.log('password rsa_4096:', enc_passwd);
							//decrypt password
							//*** end mobile app tasks****
							
							//decrypt password to get data
							//const dec_passwd = rsaDecrypt(enc_passwd, 'crypto/rsa_4096_priv.pem');
							//console.log('decrypt password', dec_passwd);
							//console.log("decrypt data",aes_256_decrypt(enc_data,password));
							//****End of Mobile Task*****//
							
							dec_data=aes_256_decrypt(enc_data,password);
							console.log("decrypt data :"+dec_data);
							console.log("subscribed successfull : "+var_subscriberId);
							//  res.json(varObj.subscriber_id);
                                                                                                                                    
                                                                                                                                    
							data = {
								"status":"success",
								"data":  enc_data
									
								}
							res.json(data);
						}
					});
					//end insert subscription
	        }      
			});
	con.release();
	}
	});	

});

//subscription status
router.post('/status',function(req,res){
	engparam=req.originalUrl;
//	varstringify=JSON.stringify(req.body);
//	varBody=JSON.parse(varstringify);
	var_deviceId=req.body.device_id;
	var_subscriberId=req.body.subscriber_id;
	var_token=req.body.token;

	var_dateTime= new Date();
	

    pool.getConnection(function(err,con){
		if (err) {
			console.log("can't connect database server");
		} else {		
    		//find redeem code
    		con.query("SELECT ? FROM ??  WHERE subscriber_id LIKE ? AND device_id LIKE ? ",["subscriber_id","subscribe",var_subscriberId,var_deviceId], function (err,result){
				if (!result.length){
            		data = {
            			"status":"fail",
            			"description" : "Not Subscribed"
              			}
            		res.json(data);
				}else {
					data = {
						"status":"success",
						"description": "Already Subscribed"
						}
					res.json(data);
	        }      
			});
	con.release();
	}
	});	

});






//mysql db


function aes_256_encrypt(text,passwd){
	var cipher = crypto.createCipher(algorithm,passwd)
	//      var cipher = crypto.Cipheriv(algorithm,passwd)
	var crypted = cipher.update(text,'utf8','hex')
	crypted += cipher.final('hex');
	return crypted;
}

function aes_256_decrypt(text,passwd){
	var decipher = crypto.createDecipher(algorithm,passwd)
	//      var decipher = crypto.Cipheriv(algorithm,passwd)
	var dec = decipher.update(text,'hex','utf8')
	dec += decipher.final('utf8');
	return dec;
 }
 



module.exports = router
